@inject IToastService toastService
@page "/R_ProductosEmpaque"
@page "/C_ProductosEmpaque/{empaqueId:int}"

<EditForm Model="productoEmpaque" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container-sm row-cols-md-1">

        <div class="card shadow-lg">

            <div class="card-header">
                <h3 class="card-title">Registro de Empaques</h3>
            </div>

            <div class="card-body">

                @* Buscar *@
                <div class="form-group align-items-right">
                    <div class="form-row">
                        <label>Producto Id: </label>
                        <div class="input-group">
                            <InputNumber @bind-Value="productoEmpaque.EmpaqueId" class="form-control col-4 col" />
                            <div class="input-group-append col">
                                <button type="button" class="btn btn-success input-group-text" @onclick="Buscar">
                                    <span class="oi oi-magnifying-glass"> Buscar</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <hr>

                @* Fecha *@
                <div class="row">
                    <div class="form-group col">
                        <label>Fecha de Expiracion: </label>
                        <InputDate class="form-control" @bind-Value="productoEmpaque.Fecha" />
                        <ValidationMessage For="@(() => productoEmpaque.Fecha)" />
                    </div>
                </div>

                <br>

                @* Concepto *@
                <div class="row">
                    <div class="form-group col">
                        <label>Concepto: </label>
                        <InputText class="form-control" @bind-Value="productoEmpaque.Concepto"
                            placeholder="Descripción del producto" />
                        <ValidationMessage For="@(() => productoEmpaque.Concepto)" />
                    </div>
                </div>

                <hr>
                <br>

                @* Utilizados *@
                <div class="card">

                    <div class="card-header">
                        <h3>Utilizados</h3>
                    </div>

                    <form>

                        <div class="row align-items-end">

                            @* ComboBox Productos *@
                            <div class="form-group col">
                                <label>Productos: </label>
                                <InputSelect id="SelectProductos" @bind-Value="utilizado.Descripcion" class="form-control">

                                    <option></option>

                                    @foreach (var item in listaProductos)
                                    {
                                        <option value="@item.Descripcion">@item.Descripcion</option>
                                    }

                                </InputSelect>
                            </div>

                            @* Cantidad *@
                            <div class="form-group col">
                                <label>Cantidad: </label>
                                <InputNumber class="form-control" @bind-Value="utilizado.Cantidad" />
                                <ValidationMessage For="@(() => utilizado.Cantidad)" />
                            </div>

                            @* Boton Agregar Utizados *@
                            <div class="form-group col">
                                <button type="button" class="btn btn-success col" @onclick="AgregarUtilizados">
                                    <span class="oi oi-plus"> Agregar</span>
                                </button>
                            </div>

                        </div>

                        <br>

                        <table class="table table-secondary">
                            <thead class="thead-dark">
                                <tr class="table-info">
                                    <th>ProductoId</th>
                                    <th>Descripcion</th>
                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in productoEmpaque.Utilizados)
                                {

                                    <tr>

                                        <td>@item.UtilizadoId</td>
                                        <td>@item.Descripcion</td>
                                        <td>@item.Cantidad</td>

                                        <td>
                                            <span class="btn btn-sm btn-outline-primary oi oi-ban" href="#" @onclick=" (() =>
                                                RemoverFila(item)) "> Remover
                                            </span>
                                        </td>

                                    </tr>
                                }

                            </tbody>
                        </table>
                    </form>

                    @* Total *@
                    <div class="input-group mb-2">
                        <span class="input-group-text">
                            Peso Total: 
                        </span>
                        <InputNumber class="form-control" @bind-Value="Total" readonly />
                    </div>

                </div>

                <hr>
                <br>

                @* Producidos *@
                <div class="card">

                    <div class="card-header">
                        <h3>Producido</h3>
                    </div>

                    <br>

                    <form>

                        <div class="row">

                            @* Combo BOX Productos *@
                            <div class="form-group col">

                                <label>Productos Creados: </label>

                                <InputSelect id="SelectProductos" @bind-Value="ProductosCreados" class="form-control">

                                    <option></option>

                                    @foreach (var item in listaCreados)
                                    {
                                        <option value="@item">@item</option>
                                    }

                                    <option value="@productoEmpaque.Concepto" >Mixtas</option>

                                </InputSelect>
                            </div>

                            @* Cantidad *@
                            <div class="form-group col">
                                <label>Cantidad: </label>
                                <InputNumber class="form-control" @bind-Value="CantidadProducido" min=0 />
                                <ValidationMessage For="@(() => CantidadProducido)" />
                            </div>

                        </div>

                    </form>

                </div>
            </div>

            <div class="card-footer">

                @* Botones *@
                <div class="form-group text-center" display: inline-block>

                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <span class="oi oi-plus"> Nuevo</span>
                    </button>

                    <button type="submit" class="btn btn-lg btn-success">
                        <span class="oi oi-folder"> Guardar</span>
                    </button>

                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <span class="oi oi-trash"> Eliminar</span>
                    </button>

                </div>

            </div>

        </div>
    </div>

</EditForm>

@code {

    public int IdBusqueda { get; set; } = 0;
    public int CantidadProducido { get; set; } = 0;
    public string? ProductosCreados { get; set; }
    public double Total { get; set; } = 0;
    public Productos producto { get; set; } = new Productos();
    public Utilizados utilizado { get; set; } = new Utilizados();
    public ProductosEmpaque productoEmpaque { get; set; } = new ProductosEmpaque();
    public List<Productos> listaProductos { get; set; } = new List<Productos>();
    public List<string> listaCreados = new List<string>();

    [Inject]
    public ProductoBLL productosBLL { get; set; }

    [Inject]
    public ProductoEmpaqueBLL productosEmpaqueBLL { get; set; }

    [Parameter]
    public int empaqueId { get; set; }

    protected override void OnInitialized()
    {
        listaProductos = productosBLL.GetList(t => true);
        productoEmpaque.EmpaqueId = empaqueId;
        Buscar();
    }

    public void Buscar()
    {
        if (this.productoEmpaque.EmpaqueId > 0)
        {

            ProductosEmpaque encontrado = null;
            encontrado = productosEmpaqueBLL.Buscar(this.productoEmpaque.EmpaqueId);

            if (encontrado != null)
            {
                this.productoEmpaque = encontrado;
            }
            else
            {
                toastService.ShowError("No se encontró el producto");
            }
        }
    }

    public void Nuevo()
    {
        productoEmpaque = new ProductosEmpaque();
    }

    public void Guardar()
    {
        bool paso = productosEmpaqueBLL.Guardar(productoEmpaque);

        if (paso)
        {
            CrearProducido();
            toastService.ShowInfo("Se guardó exitosamente");
        }
        else
            toastService.ShowError("No se pudo guardar.");
    }

    public void Eliminar()
    {
        if (productosEmpaqueBLL.Eliminar(productoEmpaque.EmpaqueId))
        {
            Nuevo();
            toastService.ShowSuccess("Eliminación exitosa");
        }
        else
        {
            toastService.ShowError("Eliminación fallida");
        }
    }

    private void RemoverFila(Utilizados item)
    {
        this.productoEmpaque.Utilizados.Remove(item);
    }

    public List<int> listaId = new List<int>();

    public void AgregarUtilizados()
    {
        producto = new Productos();

        //producto = productosBLL.Buscar(utilizado.UtilizadoId);
        producto = productosBLL.ExisteProducto(utilizado.Descripcion);
        this.utilizado.UtilizadoId = producto.ProductoId;
        this.utilizado.producto = producto;

        bool paso = productoEmpaque.Utilizados.Any(u => u.UtilizadoId == utilizado.UtilizadoId);

        if (!paso)
        {
            productoEmpaque.Utilizados.Add(utilizado);
        }
        else
        {
            var auxialiar = productoEmpaque.Utilizados.Find(u => u.Id == utilizado.Id);
            utilizado.Cantidad += auxialiar.Cantidad;
            productoEmpaque.Utilizados.Remove(auxialiar);
            productoEmpaque.Utilizados.Add(auxialiar);
        }
        
        CacularPesoTotal(utilizado.Descripcion, utilizado.Cantidad);
        LlenarLista(utilizado.Descripcion);

        utilizado = new Utilizados();   
    }

    // Mejorar con LinQ
    public void CacularPesoTotal(string descripcion, int cantidad)
    {
        foreach (var item in listaProductos)
        {
            if (descripcion == item.Descripcion)
            {
                Total += (item.Peso * cantidad);
            }
        }
    }

    public void LlenarLista(string descripcion)
    {
        listaCreados.Add(descripcion);
    }

    public void CrearProducido()
    {
        var auxiliar = new Productos(ProductosCreados);
        productosBLL.Guardar(auxiliar);
    }

}
